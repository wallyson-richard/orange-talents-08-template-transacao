spring:
  datasource:
    url: ${URL_DATABASE:jdbc:postgresql://localhost:5434/transacoes}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/transacoes/protocol/openid-connect/certs}
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost:9092}
    consumer:
      auto-offset-reset: ${KAFKA_OFFSET-RESET:earliest}
      group-id: ${KAFKA_GROUP_ID:transacoes}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
topic:
  transacao: ${KAFKA_TRANSACAO_TOPICO:transacoes}